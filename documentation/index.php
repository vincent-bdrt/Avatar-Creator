<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CrÃ©er un jeu de crÃ©ation d'avatar - Avatar Creator - TUTORIEL FACILE</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="css/prism.css">
    <link rel="stylesheet" href="css/style.css">
</head>

<body>
    <header>
        <section class="top-header">
            <div class="container">
                <p>La documentation est en cours de redaction, certaines informations sont manquantes</p>
                <div class="darkmode"></div>
                <div class="swith-langue"></div>
            </div>
        </section>
        <div class="container">
            <h1>CrÃ©er un jeu de crÃ©ation d'avatar en HTML, CSS et JavaScript</h1>
            <h2>TUTORIEL FACILE</h2>
        </div>
    </header>
    <main>
        <section>
            <article>
                <div class="article-content">


                    <h2 id="#Introduction">Introduction</h2>
                    <p>Bienvenue dans ce tutoriel oÃ¹ nous allons apprendre Ã  crÃ©er des avatars en utilisant JavaScript,
                        Ã©tape par Ã©tape comment construire un jeu d'avatar interactif.
                        <br>
                        <br>
                        Nous allons couvrir les bases du dÃ©veloppement web, en utilisant JavaScript pour la logique,
                        HTML pour la structure de la page, et CSS pour le style. Vous apprendrez Ã  permettre aux
                        utilisateurs de personnaliser leurs avatars avec diffÃ©rentes options pour crÃ©er des personnages
                        uniques.
                    </p>

                    <hr>

                    <h2 id="Prerequis">PrÃ©requis</h2>
                    <p>
                        Avant de plonger dans la crÃ©ation de votre jeu d'avatar en JavaScript, HTML et CSS,
                        assurez-vous d'avoir les Ã©lÃ©ments suivants en place :
                    </p>
                    <h3 id="editeur">
                        Ã‰diteur de code
                    </h3>
                    <p>
                        Assurez-vous d'avoir un Ã©diteur de code installÃ© sur votre machine. Nous recommandons
                        l'utilisation de Visual Studio Code, un Ã©diteur puissant et convivial largement utilisÃ© par les
                        dÃ©veloppeurs web. Si vous n'avez pas dÃ©jÃ  installÃ© Visual Studio Code, vous pouvez le
                        tÃ©lÃ©charger Ã  partir du <a href="https://code.visualstudio.com/Download" target="_blank">site
                            officiel</a>.
                    </p>
                    <h3 id="notions">
                        Notions de base en HTML, CSS et JavaScript
                    </h3>

                    <p>
                        Ce tutoriel suppose une comprÃ©hension de base des langages de balisage HTML, des feuilles de
                        style CSS pour la mise en forme, et du langage de programmation JavaScript pour la logique
                        dynamique. Si vous n'Ãªtes pas familier avec ces concepts, nous <strong>vous recommandons de
                            passer en
                            revue les bases avant de poursuivre</strong>. Il existe de nombreuses ressources en ligne
                        pour vous aider
                        Ã  acquÃ©rir ces compÃ©tences, et une connaissance prÃ©alable facilitera grandement votre expÃ©rience
                        avec ce tutoriel.
                    </p>
                    <h3 id="Elements">
                        Ã‰lÃ©ments de l'avatar
                    </h3>
                    <p>
                        PrÃ©parez au moins 4 Ã  5 formes pour chaque catÃ©gorie d'avatar que vous souhaitez inclure
                        (coiffures, accessoires, vÃªtements, etc.). Assurez-vous que tous les Ã©lÃ©ments sont au format PNG
                        pour prendre en charge la transparence. Uniformisez la taille de chaque Ã©lÃ©ment Ã  1000x1000
                        pixels pour maintenir la cohÃ©rence visuelle.
                    </p>

                    <p>
                        En rÃ©sumÃ©, assurez-vous d'avoir un Ã©diteur de code prÃªt Ã  l'emploi et une comprÃ©hension
                        prÃ©alable des concepts de base en HTML, CSS et JavaScript. Avec ces prÃ©requis en place, vous
                        Ãªtes prÃªt Ã  plonger dans le processus de crÃ©ation de votre propre jeu d'avatar interactif !
                    </p>
                    <p>
                        Pour faciliter votre expÃ©rience dans la crÃ©ation du jeu d'avatar en JavaScript, HTML et CSS, je
                        mets Ã  votre disposition un kit de dÃ©marrage. Ce kit comprend les documents de base, une
                        structure de dossier prÃªte Ã  l'emploi, ainsi que des Ã©lÃ©ments visuels d'exemple pour chaque
                        catÃ©gorie d'avatar (coiffures, accessoires, vÃªtements, etc.). <br /> Ce kit de dÃ©marrage vous
                        permettra de gagner du temps en vous fournissant une base solide pour commencer votre projet
                        sans avoir Ã  crÃ©er chaque Ã©lÃ©ment visuel dÃ¨s le dÃ©part.
                    </p>
                    <a href="">TÃ©lÃ©charger le kit de dÃ©marrage </a>
                    <hr>

                    <h2 id="Architectures">Architectures des dossiers</h2>
                    <p>
                        Avant de commencer Ã  coder, nous allons d'abord crÃ©er une structure de dossiers pour notre jeu
                        d'avatar. Cette structure de dossiers nous aidera Ã  organiser notre code et Ã  maintenir une
                        base de code propre et modulaire. Premierement il faut crÃ©er un dossier pour notre projet et
                        nous l'appelerons
                        avatar-creator. Dans ce dossier, nous allons crÃ©er trois fichier : index.html, style.css et
                        global.js.
                        Nous allons Ã©galement crÃ©er un dossier sections qui regrouperas nos images.
                        <br>
                        <br>
                        Pour faciliter la comprÃ©hension de la structure de notre dossier, nous allons crÃ©er des
                        sous-dossiers dans le dossier avatar-creator pour chaque catÃ©gorie d'avatar. Dans notre cas,
                        nous
                        aurons des sous-dossiers pour les coiffures, les accessoires, les vÃªtements, les yeux, les
                        sourcils, les bouches, les nez et les oreilles. Nous aurons Ã©galement un sous-dossier pour les
                        images de base, qui contiendra les images de base pour les avatars masculins et fÃ©minins.
                        <br>
                        <br>
                        Notre structure de dossiers ressemblera Ã  ceci :
                    <pre class="tree">
ğŸ“¦avatar-creator
 â”£ ğŸ“‚sections
 â”ƒ â”£ ğŸ“‚Eyes
 â”ƒ â”ƒ â”£ ğŸ“œ1.png
 â”ƒ â”ƒ â”£ ğŸ“œ2.png
 â”ƒ â”ƒ â”£ ğŸ“œ3.png
 â”ƒ â”ƒ â”— ğŸ“œ(...).png
 â”ƒ â”£ ğŸ“‚Hair 
 â”ƒ â”ƒ â”£ ğŸ“‚1
 â”ƒ â”ƒ â”ƒ â”£ ğŸ“œblack.png
 â”ƒ â”ƒ â”ƒ â”£ ğŸ“œdarkbrown.png
 â”ƒ â”ƒ â”ƒ â”£ ğŸ“œbrown.png
 â”ƒ â”ƒ â”ƒ â”— ğŸ“œ(...).png
 â”ƒ â”ƒ â”£ ğŸ“‚2
 â”ƒ â”ƒ â”£ ğŸ“‚3
 â”ƒ â”ƒ â”— ğŸ“‚(...)
 â”ƒ â”£ ğŸ“‚Mouth
 â”ƒ â”£ ğŸ“‚Nose
 â”ƒ â”£ ğŸ“‚Skin
 â”ƒ â”ƒ â”£ ğŸ“‚men
 â”ƒ â”ƒ â”— ğŸ“‚women
 â”ƒ â”— ğŸ“‚Top 
 â”ƒ â”ƒ â”£ ğŸ“‚men
 â”ƒ â”ƒ â”ƒ â”£ ğŸ“‚1
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ğŸ“œblack.png
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ğŸ“œgrey.png
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ğŸ“œwhite.png
 â”ƒ â”ƒ â”ƒ â”ƒ â”— ğŸ“œ(...).png
 â”ƒ â”ƒ â”ƒ â”£ ğŸ“‚2
 â”ƒ â”ƒ â”ƒ â”£ ğŸ“‚3
 â”ƒ â”ƒ â”ƒ â”— ğŸ“‚(...)
 â”ƒ â”ƒ â”— ğŸ“‚women
 â”£ ğŸ“‚UI
 â”£ ğŸ“œglobal.js
 â”£ ğŸ“œindex.html
 â”£ ğŸ“œreset.css
 â”— ğŸ“œstyle.css
                        </pre>
                    En regle gÃ©nÃ©ral on utilise des noms de dossiers en anglais. Cela permet de faciliter la
                    comprÃ©hension du code par les autres dÃ©veloppeurs. <br>
                    <br>
                    Nous allons Ã©galement crÃ©er un fichier reset.css qui contiendra
                    les styles de rÃ©initialisation de notre page.
                    <br><br>
                    Le dossier UI contiendra les Ã©lÃ©ments de l'interface utilisateur, tels que des icones ou des
                    images. <br>

                    Pour ce qui est des sections, on retrouve la mÃªme structure de dossiers. Chaque section
                    [nom de la section] avec une majuscule puis [option] puis [couleur.png/variation.png]. <br>
                    <br>


                    </p>


                    <h2 id="HTML">
                        Ã‰tape 1 : CrÃ©er un fichier HTML
                    </h2>
                    <p>
                        La premiÃ¨re Ã©tape de la crÃ©ation de votre jeu d'avatar consiste Ã  crÃ©er un fichier HTML. C'est
                        dans ce fichier que nous dÃ©finirons la structure de la page et que nous inclurons les Ã©lÃ©ments
                        nÃ©cessaires Ã  l'interaction avec l'utilisateur. Pour commencer, ouvrez le fichier index.html.
                    <div class="code">
                        <div class="informations">
                            <span class="HTML language">HTML</span>
                            <span class="file">index.html</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-html">
&lt;!DOCTYPE html&gt;
&lt;html lang="fr"&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8"&gt;
        &lt;mesta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
        &lt;title&gt;Creation d'avatar&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;/body&gt;
&lt;/html&gt;
                    </code>
                </pre>
                    </div>
                    </p>

                    <hr>
                    <p>
                        Pour construire la base de notre jeu d'avatar, nous allons diviser notre page en deux sections
                        principales : une section pour afficher le rÃ©sultat final de l'avatar personnalisÃ© et une
                        section pour la sÃ©lection des diffÃ©rentes options. De plus, nous inclurons un en-tÃªte (header)
                        qui contiendra la navigation et un bouton de tÃ©lÃ©chargement.
                    <div class="code">
                        <div class="informations">
                            <span class="HTML language">HTML</span>
                            <span class="file">index.html</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-html">
&lt;body&gt;
    &lt;div class="grid-2"&gt;
        &lt;div id="leftSection"&gt;
            &lt;div class="result"&gt;
                &lt;canvas id="resultFinal" width="1000" height="1000"&gt;&lt;/canvas&gt;
                &lt;img src="sections/Skin/men/1.png" alt="Avatar" id="resultSkin"&gt;
                &lt;img src="sections/Hair/1/black.png" alt="Avatar" id="resultHair"&gt;
                &lt;img src="sections/Eyes/1.png" alt="Avatar" id="resultEyes"&gt;
                &lt;img src="sections/Mouth/1.png" alt="Avatar" id="resultMouth"&gt;
                &lt;img src="sections/Nose/1.png" alt="Avatar" id="resultNose"&gt;
                &lt;img src="sections/Top/men/1/red.png" alt="Avatar" id="resultTop"&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id="rightSection"&gt;
            &lt;header&gt;
                &lt;!-- Navigation des diffÃ©rentes sections--&gt;
            &lt;/header&gt;
            &lt;main&gt;
                &lt;!--Sections--&gt;
            &lt;/main&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
                    </code>
                </pre>
                    </div>
                    <p> Dans la section de gauche, nous allons inclure un canvas pour afficher le rÃ©sultat final de
                        l'avatar personnalisÃ©. Nous allons Ã©galement inclure des images pour chaque option
                        d'avatar. Ces images seront utilisÃ©es pour afficher les options sÃ©lectionnÃ©es par
                        l'utilisateur. Ces images sont les choix par dÃ©faut de l'utilisateur.
                        Lorsque l'utilisateur sÃ©lectionne une option, nous allons mettre Ã  jour l'image. Par
                        exemple, si l'utilisateur sÃ©lectionne une option de cheveux, nous allons mettre Ã  jour
                        l'image des cheveux pour afficher l'option sÃ©lectionnÃ©e.


                    </p>
                    <div class="note">
                        Avant de plonger dans la complexitÃ© du dÃ©veloppement de votre jeu d'avatar, nous allons
                        commencer par travailler avec des Ã©lÃ©ments simples. Cette approche nous permettra de bien
                        comprendre les bases et de construire progressivement vers des concepts plus avancÃ©s.

                        Dans cette premiÃ¨re Ã©tape, nous allons crÃ©er des Ã©lÃ©ments de base pour l'affichage du
                        rÃ©sultat
                        final de l'avatar et la sÃ©lection des options. Au fil du tutoriel, nous Ã©voluerons vers des
                        mÃ©thodes plus avancÃ©es pour rendre votre code plus modulaire, maintenable et extensible.
                    </div>
                    </p>
                    <hr>
                    <h3>Navigation</h3>
                    <p>
                        Pour permettre aux utilisateurs de naviguer entre les diffÃ©rentes options d'avatar, nous allons
                        crÃ©er des boutons de navigation qui correspondent Ã  des catÃ©gories spÃ©cifiques. Ces boutons
                        permettront de changer dynamiquement le contenu de la section de sÃ©lection d'options.
                    </p>
                    <p>
                    <div class="code">
                        <div class="informations">
                            <span class="HTML language">HTML</span>
                            <span class="file">index.html</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-html">
&lt;!--Header de la section de droite--&gt;
&lt;header&gt;
    &lt;nav id="categories"&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;button type="button" data-target="Skin" class="active"&gt;Peau&lt;/button&gt;&lt;/li&gt;
            &lt;li&gt;&lt;button type="button" data-target="Mouth"&gt;Bouche&lt;/button&gt;&lt;/li&gt;
            &lt;li&gt;&lt;button type="button" data-target="Nose"&gt;Nez&lt;/button&gt;&lt;/li&gt;
            &lt;li&gt;&lt;button type="button" data-target="Eyes"&gt;Regard&lt;/button&gt;&lt;/li&gt;
            &lt;li&gt;&lt;button type="button" data-target="Hair"&gt;Cheveux&lt;/button&gt;&lt;/li&gt;
            &lt;li&gt;&lt;button type="button" data-target="Top"&gt;Vetement&lt;/button&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/nav&gt;
&lt;/header&gt;
                            </code>
                            </pre>
                    </div>
                    </p>
                    <p>
                        Nous allons Ã©galement inclure un bouton de tÃ©lÃ©chargement dans la section de la peau pour
                        permettre aux
                        utilisateurs de tÃ©lÃ©charger leur avatar personnalisÃ©.
                    </p>
                    <div class="code">
                        <div class="informations">
                            <span class="HTML language">HTML</span>
                            <span class="file">index.html</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-html">
&lt;!--Bouton de tÃ©lÃ©chargement--&gt;                     
&lt;button id="download"&gt;
    Mon Avatar est prÃªt !<br />
&lt;/button&gt;                                
                            </code>
                            </pre>
                    </div>

                    <hr>
                    <h3>Sections</h3>
                    <p>
                        Maintenant que nous avons crÃ©Ã© les boutons de navigation, nous allons crÃ©er les sections
                        correspondantes pour afficher les options d'avatar. Nous allons crÃ©er une section pour chaque
                        catÃ©gorie d'avatar et inclure les options correspondantes dans chaque section.

                        Chaque section est composÃ©e d'une liste d'images qui reprÃ©sentent les options d'avatar. Chaque
                        image est enveloppÃ©e dans une balise li et possÃ¨de un attribut data-element qui correspond Ã 
                        l'Ã©lÃ©ment d'avatar. Par exemple, la premiÃ¨re image de la section de la peau aura un attribut
                        data-element de 1, la deuxiÃ¨me image aura un attribut data-element de 2, et ainsi de suite.
                        <br>
                        <br>
                        Nous utiliserons ces attributs data-element pour identifier les options d'avatar et les
                        afficher dans la section de rÃ©sultat final.<br>

                        Des options peuvent exister dans plusieurs catÃ©gories d'avatar. Par exemple, la peau peut
                        Ãªtre utilisÃ©e pour les avatars masculins et fÃ©minins. Pour Ã©viter les doublons, nous allons
                        crÃ©er une seule section pour la peau et l'inclure dans les deux catÃ©gories d'avatar.
                        <br>
                        On peut Ã©galement ajouter une couleur Ã  certaines options. Par exemple, les cheveux peuvent
                        avoir une couleur. Pour permettre aux utilisateurs de choisir une couleur, nous allons crÃ©er
                        une section pour les couleurs et l'inclure dans les catÃ©gories d'avatar qui ont des options
                        de couleur.
                        <br>
                        De la meme faÃ§on, certaine option peuvent Ãªtre utilisÃ© dans plusieurs catÃ©gories d'avatar.
                        Les vetements peuvent Ãªtre utilisÃ© pour les avatars masculins et fÃ©minins et avoir une couleur.
                    </p>
                    <!--Section sans option-->
                    <div class="accordion">
                        <div class="accordion-title">
                            <h4>Section sans options</h4>
                        </div>
                        <div class="accordion-body">
                            <div class="accordion-contain">
                                <p>
                                    Nous allons commencer par crÃ©er une section pour la bouche. Cette section contiendra
                                    aucune
                                    option pour le moment.
                                </p>
                                <div class="code">
                                    <div class="informations">
                                        <span class="HTML language">HTML</span>
                                        <span class="file">index.html</span>
                                        <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                                    </div>
                                    <pre>
                                <code class="language-html">
&lt;section id="Mouth"&gt;
    &lt;ul class="vignettes"&gt;
        &lt;li class="vignette active" data-element="1"&gt;&lt;img src="sections/Mouth/1.png" alt="Mouth - 1"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="2"&gt;&lt;img src="sections/Mouth/2.png" alt="Mouth - 2"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="3"&gt;&lt;img src="sections/Mouth/3.png" alt="Mouth - 3"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="4"&gt;&lt;img src="sections/Mouth/4.png" alt="Mouth - 4"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="5"&gt;&lt;img src="sections/Mouth/5.png" alt="Mouth - 5"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="6"&gt;&lt;img src="sections/Mouth/6.png" alt="Mouth - 6"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="7"&gt;&lt;img src="sections/Mouth/7.png" alt="Mouth - 7"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="8"&gt;&lt;img src="sections/Mouth/8.png" alt="Mouth - 8"&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;
                                </code>
                            </pre>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--Section avec option de genre-->
                    <div class="accordion">
                        <div class="accordion-title">
                            <h4>Section pour definir le genre</h4>
                        </div>
                        <div class="accordion-body">
                            <div class="accordion-contain">
                                <p>
                                    Ensuite, nous allons crÃ©er une section pour la peau. Cette section contiendra
                                    des options de
                                    couleur pour
                                    la peau et des options de genre pour les avatars masculins et fÃ©minins.

                                    Cette option est importante car elle permettra de determiner pour l'ensemble du
                                    jeu si l'utilisateur est un homme ou une femme.

                                    Cette option se comporte comme pour le choix des couleurs.

                                    J'initialise la section avec la class .active pour que Ã§a soit la section visible au
                                    lancement du jeu.


                                </p>
                                <div class="code">
                                    <div class="informations">
                                        <span class="HTML language">HTML</span>
                                        <span class="file">index.html</span>
                                        <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                                    </div>
                                    <pre>
                                <code class="language-html">
&lt;section id="Skin" class="active"&gt;
    &lt;ul class="vignettes"&gt;
        &lt;li class="vignette active" data-element="men"&gt;&lt;img src="sections/Skin/men/1.png" alt="Skin - men"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="women"&gt;&lt;img src="sections/Skin/women/1.png" alt="Skin - women"&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul class="colors"><br />
        &lt;li class="color active" data-color="1" style="background-color: #eed8c5;">&lt;/li&gt;
        &lt;li class="color" data-color="2" style="background-color: #d1b39a;">&lt;/li&gt;
        &lt;li class="color" data-color="3" style="background-color: #bd9574;">&lt;/li&gt;
        &lt;li class="color" data-color="4" style="background-color: #ba875e;">&lt;/li&gt;
        &lt;li class="color" data-color="5" style="background-color: #9b6e4a;">&lt;/li&gt;
        &lt;li class="color" data-color="6" style="background-color: #775235;">&lt;/li&gt;
        &lt;li class="color" data-color="7" style="background-color: #68513f;">&lt;/li&gt;
        &lt;li class="color" data-color="8" style="background-color: #64554b;">&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;
</code>
                            </pre>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--Section avec option de couleur-->
                    <div class="accordion">
                        <div class="accordion-title">
                            <h4>Section avec option couleur</h4>
                        </div>
                        <div class="accordion-body">
                            <div class="accordion-contain">
                                <p>
                                    Ensuite, nous allons crÃ©er une section pour les cheveux. Cette section contiendra
                                    des options de couleur pour les cheveux.
                                    Par defaut, nous allons afficher la couleur noir. Cette option est importante car
                                    elle permettra de determiner pour l'ensemble du jeu la couleur de cheveux de
                                    l'utilisateur.

                                    Ce genre de section peut etre utilisÃ©s pour les yeux, les sourcils, les vetements
                                    et les accessoires.

                                </p>
                                <div class="code">
                                    <div class="informations">
                                        <span class="HTML language">HTML</span>
                                        <span class="file">index.html</span>
                                        <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                                    </div>
                                    <pre>
                                            <code class="language-html">
            &lt;section id="Hair"&gt;
                &lt;ul class="vignettes"&gt;
                    &lt;li class="vignette" data-element="1"&gt;&lt;img src="sections/Hair/1/black.png" alt="Hair - 1"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="2"&gt;&lt;img src="sections/Hair/2/black.png" alt="Hair - 2"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="3"&gt;&lt;img src="sections/Hair/3/black.png" alt="Hair - 3"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="4"&gt;&lt;img src="sections/Hair/4/black.png" alt="Hair - 4"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="5"&gt;&lt;img src="sections/Hair/5/black.png" alt="Hair - 5"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="6"&gt;&lt;img src="sections/Hair/6/black.png" alt="Hair - 6"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="7"&gt;&lt;img src="sections/Hair/7/black.png" alt="Hair - 7"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="8"&gt;&lt;img src="sections/Hair/8/black.png" alt="Hair - 8"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="9"&gt;&lt;img src="sections/Hair/9/black.png" alt="Hair - 9"&gt;&lt;/li&gt;
                    &lt;li class="vignette" data-element="10"&gt;&lt;img src="sections/Hair/10/black.png" alt="Hair - 10"&gt;&lt;/li&gt;

                &lt;/ul&gt;
                &lt;ul class="colors">
                    &lt;li class="color active" data-color="black" style="background-color: #000000;">&lt;/li&gt;
                    &lt;li class="color" data-color="darkbrown" style="background-color: #373018;">&lt;/li&gt;
                    &lt;li class="color" data-color="brown" style="background-color: #7e623e;">&lt;/li&gt;
                    &lt;li class="color" data-color="darkred" style="background-color: #a9612e;">&lt;/li&gt;
                    &lt;li class="color" data-color="ginger" style="background-color: #db792e;">&lt;/li&gt;
                    &lt;li class="color" data-color="blond" style="background-color: #dede7e;">&lt;/li&gt;
                    &lt;li class="color" data-color="gray" style="background-color: #888888;">&lt;/li&gt;
                    &lt;li class="color" data-color="white" style="background-color: #ededed;">&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/section&gt;
            </code>
                                        </pre>
                                </div>
                            </div>
                        </div>
                    </div>



                    <!--Section avec option de genre et couleur-->
                    <div class="accordion">
                        <div class="accordion-title">
                            <h4>Section avec options genre & couleurs</h4>
                        </div>
                        <div class="accordion-body">
                            <div class="accordion-contain">
                                <p>
                                    Ensuite, nous allons crÃ©er une section pour les vÃªtements. Cette section contiendra
                                    des options de couleur seulement. Le choix du genre aura Ã©tÃ© rÃ©alisÃ© en amont lors
                                    du choix de
                                    la peau.

                                </p>
                                <div class="code">
                                    <div class="informations">
                                        <span class="HTML language">HTML</span>
                                        <span class="file">index.html</span>
                                        <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                                    </div>
                                    <pre>
                                <code class="language-html">
&lt;section id="Top"&gt;
    &lt;ul class="vignettes"&gt;
        &lt;li class="vignette" data-element="1"&gt;&lt;img src="sections/Top/1/men/red.png" alt="Top - 1"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="2"&gt;&lt;img src="sections/Top/2/men/red.png" alt="Top - 2"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="3"&gt;&lt;img src="sections/Top/3/men/red.png" alt="Top - 3"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="4"&gt;&lt;img src="sections/Top/4/men/red.png" alt="Top - 4"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="5"&gt;&lt;img src="sections/Top/5/men/red.png" alt="Top - 5"&gt;&lt;/li&gt;
        &lt;li class="vignette" data-element="6"&gt;&lt;img src="sections/Top/6/men/red.png" alt="Top - 6"&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul class="colors">
        &lt;li class="color" data-color="black" style="background-color: #000000;">&lt;/li&gt;
        &lt;li class="color" data-color="grey" style="background-color: #888888;">&lt;/li&gt;
        &lt;li class="color" data-color="white" style="background-color: #ffffff;">&lt;/li&gt;
        &lt;li class="color active" data-color="red" style="background-color: #ff0000;">&lt;/li&gt;
        &lt;li class="color" data-color="orange" style="background-color: #ff8800;">&lt;/li&gt;
        &lt;li class="color" data-color="yellow" style="background-color: #ffff00;">&lt;/li&gt;
        &lt;li class="color" data-color="green" style="background-color: #44ff44;">&lt;/li&gt;
        &lt;li class="color" data-color="blue" style="background-color: #0000ff;">&lt;/li&gt;
        &lt;li class="color" data-color="purple" style="background-color: #aa44aa;">&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;
</code>
                            </pre>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    Vous avez maintenant toutes les sections de votre avatar. Il ne vous reste plus qu'Ã  les
                    styliser.
                    <br>
                    <br>
                    <h2>Style CSS</h2>
                    <p>
                        CrÃ©ez un fichier CSS et ajoutez le lien vers ce fichier dans la section head de votre
                        document HTML.

                    <div class="code">
                        <div class="informations">
                            <span class="HTML language">HTML</span>
                            <span class="file">index.html</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-html">
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;mesta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;Creation d'avatar&lt;/title&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
&lt;/head&gt;
                    </code>
                </pre>
                    </div>

                    </p>
                    <p>
                        Nous allons commencer par rÃ©initialiser les styles de base de notre page. Pour cela, nous
                        allons utiliser le fichier CSS de reset de Eric Meyer. Ce fichier permet de rÃ©initialiser
                        les styles de base de votre page et d'Ã©viter les problÃ¨mes de compatibilitÃ© entre les
                        navigateurs.
                        <br>
                        <br>
                        <a href="https://meyerweb.com/eric/tools/css/reset/" target="_blank">TÃ©lÃ©charger le
                            fichier CSS de reset</a>
                        <br>
                        <br>
                        Ajoutez le code suivant dans votre fichier CSS.
                    <div class="code">
                        <div class="informations">
                            <span class="HTML language">HTML</span>
                            <span class="file">index.html</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-html">
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;mesta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;Creation d'avatar&lt;/title&gt;
    &lt;link rel="stylesheet" href="reset.css"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
&lt;/head&gt;
                    </code>
                </pre>
                    </div>
                    <div class="code">
                        <div class="informations">
                            <span class="CSS language">CSS</span>
                            <span class="file">style.css</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-css">                             
/*---GLOBAL---*/
.grid-2 {
	display: grid;
	grid-template-columns: 40% 60%;
	grid-gap: 0px;
}
#leftSection{
    background-color: #eaeaea;
    padding: 16px;
    font-size: 16px;
}
#rightSection{
    background-color: #1f1f1f;
    color: white;
    padding: 16px;
    font-size: 16px;
}

                            </code>
                        </pre>
                    </div>
                    <h3>Navigation</h3>
                    <p>
                        Nous allons commencer par styliser la navigation. Nous allons utiliser la propriÃ©tÃ©
                        display:flex pour afficher les boutons de navigation sur une ligne.
                        <br>
                        <br>
                        Ajoutez le code suivant dans votre fichier CSS.
                    <div class="code">
                        <div class="informations">
                            <span class="CSS language">CSS</span>
                            <span class="file">style.css</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-css">
/*---NAVIGATION---*/                                
header{
    display: flex;
    justify-content: space-between;
    align-items: stretch;
    gap: 16px;
}
header nav ul{
    display: flex;
    gap: 16px;
    padding: 8px;
    background-color: white;
    border-radius: 8px;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
}
button{
    padding: 8px;
    border-radius: 8px;
    border: none;
    background-color: #eaeaea;
    color: black;
    cursor: pointer;
    border:solid 2px #eaeaea;
    transition: all ease-in-out 0.5s;
}
button.active,button:hover{
    background-color: #1f1f1f;
    color: white;
}
                            </code>
                        </pre>
                    </div>


                    <h3>Resultats</h3>
                    <p>
                        Afin de rendre le rÃ©sultat final de l'avatar plus attrayant, nous allons ajouter une ombre et un
                        fond blanc. Nous allons Ã©galement utiliser la propriÃ©tÃ© object-fit:cover pour afficher l'image
                        de
                        l'avatar en plein Ã©cran.
                        <br>
                        Ajoutez le code suivant dans votre fichier CSS.
                    </p>

                    <div class="code">
                        <div class="informations">
                            <span class="CSS language">CSS</span>
                            <span class="file">style.css</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-css">
                    /*---RESULT---*/
.result {
    overflow: hidden;
    max-width: 100%;
    position: relative;
    background-color: white;
    border-radius: 1rem;
    margin: 1rem 2rem;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;
    min-height: 80vh;
    min-width: 80vh;
}

.result:after {
    content: "";
    display: block;
    padding-bottom: 100%;
}

.result img {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    object-fit: cover;
    height: auto;
}
#resultFinal{
    display: none;
}

</code>
                        </pre>
                    </div>
                    <h3>Sections</h3>
                    <p>
                        Nous allons maintenant styliser les sections. Nous allons utiliser la propriÃ©tÃ©
                        display:grid pour afficher les vignettes sur une ligne. Nous allons Ã©galement utiliser
                        la propriÃ©tÃ© grid-template-columns pour dÃ©finir la largeur de chaque vignette.
                        <br>
                        <br>
                        Ajoutez le code suivant dans votre fichier CSS.
                    <div class="code">
                        <div class="informations">
                            <span class="CSS language">CSS</span>
                            <span class="file">style.css</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-css">
/*---SECTIONS---*/                           
main section{
    display: none;
}
main section.active{
    padding: 16px 0px;
    display: block;
}

/*---VIGNETTES---*/
.vignettes{
    overflow-y: auto;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(170px, 1fr));
    grid-auto-rows: max-content;
    grid-gap: 16px;
}
.vignette{
    transition: all ease-in-out 0.5s;
    transition-duration: 0.5s;
    cursor: pointer;
    transition-duration: 300ms;
    box-shadow: rgba(0,0,0,0.18) 0px 2px 4px;
    border-radius: 16px;
    position: relative;
    background-size: 100%;
    background-color: white;
    overflow: hidden;
}
.vignette:after{
    content: "";
    display: block;
    padding-bottom: 100%;
}
.vignette img{
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    max-width: 100%;
    height: auto;
    image-rendering: optimizequality;
}

                            </code>
                        </pre>
                    </div>
                    <p>
                        Occupons nous desormais des sections de couleurs. Nous allons utiliser la propriÃ©tÃ©
                        display:grid pour afficher les couleurs sur une ligne. Nous allons Ã©galement
                        utiliser la propriÃ©tÃ© grid-template-columns pour dÃ©finir la largeur de chaque
                        couleur.
                        <br>
                        <br>
                        Ajoutez le code suivant dans votre fichier CSS.
                    <div class="code">
                        <div class="informations">
                            <span class="CSS language">CSS</span>
                            <span class="file">style.css</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                            <code class="language-css">
/*---COULEURS---*/
.colors{
    background-color: white;
    padding:1rem;
    border-radius: 10px;
    box-shadow: rgba(0,0,0,0.18) 0px 2px 4px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
    grid-gap:8px;
    height:max-content;
    margin-top: 1rem;
}
.color{
    display: block;
    width: 50px;
    height: 50px;
    border-radius: 10px;
    box-shadow:0px 0px 0px 2px rgba(0, 0, 0, .3) inset;
    transition: all ease-in-out 0.5s;
}
.color:active,.color:hover{
    box-shadow:0px 0px 0px 2px rgb(255, 255, 255) inset;
    cursor: pointer;
}
</code>
</pre>
                    </div>
                    <hr>
                    <h2>JavaScript</h2>
                    <h3>
                        Changer de categories
                    </h3>
                    <p>
                        Nous allons maintenant ajouter le code JavaScript pour changer de catÃ©gorie
                        lorsque l'utilisateur clique sur un bouton de navigation. Nous allons utiliser
                        la mÃ©thode addEventListener pour dÃ©tecter le clic sur un bouton de navigation.
                        Nous allons Ã©galement utiliser la mÃ©thode querySelectorAll pour sÃ©lectionner
                        tous les boutons de navigation.
                        <br>
                        <br>
                        Ajoutez le code suivant dans votre fichier JavaScript.
                    <div class="code">
                        <div class="informations">
                            <span class="JS language">JS</span>
                            <span class="file">global.js</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                                                <code class="language-js">
const navigationButtons = document.querySelectorAll('#categories button');
const sections = document.querySelectorAll('main section');
// Fonction qui permet de changer de section en cliquant sur les boutons de navigation
function switchSection() {
    navigationButtons.forEach(button => {
        button.addEventListener('click', function () {
            //Ajout de la classe active au bouton cliquÃ©
            navigationButtons.forEach(button => {
                button.classList.remove("active");
            })
            this.classList.add("active");
            //Ajout de la classe active Ã  la section correspondante
            const dataTarget = this.getAttribute('data-target');
            const sectionTarget = document.getElementById(dataTarget);
            sections.forEach(section => {
                section.classList.remove("active");
            })
            sectionTarget.classList.add("active");
        })
    });
}

switchSection();
</code>
</pre>
                    </div>

                    <hr>
                    <h3>RÃ©ecrire l'URL du rÃ©sultat</h3>

                    <div class="code">
                        <div class="informations">
                            <span class="JS language">JS</span>
                            <span class="file">global.js</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                                                <code class="language-js">
let currentGender = "men";
let sectionsWithGender = ['Top'];
let sectionsWithColor = ['Skin','Hair','Top'];

function changeResultURL(sectionName){
    let section = document.getElementById(sectionName);
    let result = document.getElementById('result' + sectionName);
    let url;
    //On rÃ©cupÃ¨re la vignette active et on rÃ©cupÃ¨re l'attribut data-element
    let activeVignette = section.querySelector('.vignette.active');
    let dataElement = activeVignette.getAttribute('data-element');

    //Si la section est une section avec couleur, on rÃ©cupÃ¨re la couleur active et on rÃ©cupÃ¨re l'attribut data-color
    if(sectionsWithColor.includes(sectionName)){

        let activeColor = section.querySelector('.color.active');
        let dataColor = activeColor.getAttribute('data-color');
        url = "sections/" + sectionName + "/" + dataElement + "/" + dataColor + ".png";
        if (sectionsWithGender.includes(sectionName)){
            url = "sections/" + sectionName + "/" + currentGender + "/" + dataElement + "/" + dataColor + ".png";
        }
    //Sinon, on rÃ©cupÃ¨re l'attribut data-element de la vignette active    
    }else{
        url = "sections/" + sectionName + "/" + dataElement + ".png";
        if (sectionsWithGender.includes(sectionName)){
            url = "sections/" + sectionName + "/" + currentGender + "/" + dataElement + ".png";
        }
    }
    result.setAttribute('src', url);
}
</code>
</pre>
                    </div>
                    <p>La fonction changeResultURL permet de changer l'image du rÃ©sultat final en
                        fonction de la section sÃ©lectionnÃ©e. Elle prend en paramÃ¨tre le nom de la
                        section et utilise la mÃ©thode querySelector pour sÃ©lectionner la vignette
                        active. Elle utilise ensuite la mÃ©thode getAttribute pour rÃ©cupÃ©rer
                        l'attribut data-element de la vignette active. Elle utilise Ã©galement la
                        mÃ©thode setAttribute pour changer l'attribut src de l'image du rÃ©sultat
                        final.</p>

                    <p>
                        Nous allons maintenant ajouter le code JavaScript pour changer l'image du
                        rÃ©sultat final lorsque l'utilisateur sÃ©lectionne une option. Nous allons
                        utiliser la mÃ©thode addEventListener pour dÃ©tecter le clic sur une vignette.
                        Nous allons Ã©galement utiliser la mÃ©thode querySelectorAll pour sÃ©lectionner
                        toutes les vignettes.
                    </p>
                    <p>
                        Ajoutez le code suivant dans votre fichier JavaScript.
                    <div class="code">
                        <div class="informations">
                            <span class="JS language">JS</span>
                            <span class="file">global.js</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                                                <code class="language-js">
function changeShape() {
    //Pour chacune des sections, on rÃ©cupÃ¨re les vignettes et le nom de la section
    for (const section of sections) {
        let vignettes = section.querySelectorAll('.vignette');
        let sectionName = section.getAttribute('id');
        for (const vignette of vignettes) {
            vignette.addEventListener('click', function () {
                //On retire la classe active de toutes les vignettes de la section et on l'ajoute Ã  la vignette cliquÃ©e
                for(const vignette of vignettes){
                    vignette.classList.remove("active");
                }
                this.classList.add("active");

                changeResultURL(sectionName);
            });
        }
    }
}
changeShape();
</code>
</pre>
                    </div>
                    <p>
                        Nous allons Ã©galement ajouter le code JavaScript pour changer la couleur
                        de l'avatar lorsque l'utilisateur sÃ©lectionne une couleur. Nous allons
                        utiliser la mÃ©thode addEventListener pour dÃ©tecter le clic sur une
                        couleur. Nous allons Ã©galement utiliser la mÃ©thode querySelectorAll pour
                        sÃ©lectionner toutes les couleurs.
                    </p>
                    <div class="code">
                        <div class="informations">
                            <span class="JS language">JS</span>
                            <span class="file">global.js</span>
                            <span class="copy"><i class="fa fa-copy"></i> Copier le code </span>
                        </div>
                        <pre>
                                                <code class="language-js">
function changeColor() {
    for (const section of sections) {
        let colors = section.querySelectorAll('.color');
        let sectionName = section.getAttribute('id');
        for (const color of colors) {
            color.addEventListener('click', function () {
                //On retire la classe active de toutes les vignettes de la section et on l'ajoute Ã  la vignette cliquÃ©e
                for(const color of colors){
                    color.classList.remove("active");
                }
                this.classList.add("active");
                changeResultURL(sectionName);
            });
        }
    }
}

changeColor();
</code>
</pre>
                    </div>





                </div>
                <aside>
                    <div>
                        <h2>Navigation</h2>
                        <nav>
                            <ul>

                                <li>
                                    <a href="#Introduction">Introduction</a>
                                </li>
                                <li>
                                    <a href="#HTML">HTML</a>
                                </li>
                                <li>
                                    <a href="#CSS">CSS</a>
                                </li>
                                <li>
                                    <a href="#JS">Javacript</a>
                                    <ul>
                                        <li>
                                            <a href="#ChangeCategories">Changer de categories</a>
                                        </li>
                                        <li>
                                            <a href="#ChangeOptions">Changer une option</a>
                                        </li>
                                        <li>
                                            <a href="#Download">TÃ©lÃ©charger l'avatar</a>
                                        </li>

                                    </ul>
                                </li>
                                <li class="title">Options</li>
                                <li>
                                    <a href="#Automatisation">Automatisation</a>
                                </li>
                                <li>
                                    <a href="#Sauvegarde">Sauvegarde</a>
                                </li>

                            </ul>
                        </nav>



                    </div>
                    <a href="demo">DÃ©monstration</a>
                </aside>
            </article>
        </section>

    </main>

    <footer>
        <div class="backtotop"></div>
    </footer>
    <script src="js/prism.js"></script>
    <script src="js/documentation.js"></script>
</body>

</html>